<?php

/**
 * @file
 * CSV Text Field Formatter module
 */

/**
 * Implements hook_field_formatter_info().
 */
function csv_txt_formatter_field_formatter_info() {
  return array(
    'csv_txt_formatter' => array(
      'label' => t('CSV to list'),
      'field types' => array('text'),
      'settings' => array(
        'separator' => ',',
      ),
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function csv_txt_formatter_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  //This gets the view_mode where our settings are stored
  $display = $instance['display'][$view_mode];
  //This gets the actual settings
  $settings = $display['settings'];
  //Initialize the element variable
  $element = array();

  $element['separator'] = array(
    '#type' => 'textfield',
    '#title' => t('Separator'),
    '#description' => t('Separator, usually comma.'),
    '#default_value' => $settings['separator'],
  );

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function csv_txt_formatter_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $summary = t('Use @separator as csv separator.', array(
    '@separator'  => $settings['separator'],
  ));
  return $summary;
}

/**
 * Implements hook_field_formatter_view().
 */
function csv_txt_formatter_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $settings = $display['settings'];
  $element = array();
  $csv_text = $items[0]['safe_value'];
  $csv_items = explode($settings['separator'], $csv_text);

  $element[0] = array(
    '#theme' => 'item_list',
    '#items' => $csv_items,
    '#type' => 'ul',
  );

  return $element;
}
